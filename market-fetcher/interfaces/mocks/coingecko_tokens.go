// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/status-im/market-proxy/interfaces (interfaces: CoingeckoTokensService)
//
// Generated by this command:
//
//	mockgen -destination=mocks/coingecko_tokens.go . CoingeckoTokensService
//

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	reflect "reflect"

	events "github.com/status-im/market-proxy/events"
	interfaces "github.com/status-im/market-proxy/interfaces"
	gomock "go.uber.org/mock/gomock"
)

// MockCoingeckoTokensService is a mock of CoingeckoTokensService interface.
type MockCoingeckoTokensService struct {
	ctrl     *gomock.Controller
	recorder *MockCoingeckoTokensServiceMockRecorder
}

// MockCoingeckoTokensServiceMockRecorder is the mock recorder for MockCoingeckoTokensService.
type MockCoingeckoTokensServiceMockRecorder struct {
	mock *MockCoingeckoTokensService
}

// NewMockCoingeckoTokensService creates a new mock instance.
func NewMockCoingeckoTokensService(ctrl *gomock.Controller) *MockCoingeckoTokensService {
	mock := &MockCoingeckoTokensService{ctrl: ctrl}
	mock.recorder = &MockCoingeckoTokensServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCoingeckoTokensService) EXPECT() *MockCoingeckoTokensServiceMockRecorder {
	return m.recorder
}

// GetTokenIds mocks base method.
func (m *MockCoingeckoTokensService) GetTokenIds() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenIds")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetTokenIds indicates an expected call of GetTokenIds.
func (mr *MockCoingeckoTokensServiceMockRecorder) GetTokenIds() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenIds", reflect.TypeOf((*MockCoingeckoTokensService)(nil).GetTokenIds))
}

// GetTokens mocks base method.
func (m *MockCoingeckoTokensService) GetTokens() []interfaces.Token {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokens")
	ret0, _ := ret[0].([]interfaces.Token)
	return ret0
}

// GetTokens indicates an expected call of GetTokens.
func (mr *MockCoingeckoTokensServiceMockRecorder) GetTokens() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokens", reflect.TypeOf((*MockCoingeckoTokensService)(nil).GetTokens))
}

// SubscribeOnTokensUpdate mocks base method.
func (m *MockCoingeckoTokensService) SubscribeOnTokensUpdate() events.SubscriptionInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubscribeOnTokensUpdate")
	ret0, _ := ret[0].(events.SubscriptionInterface)
	return ret0
}

// SubscribeOnTokensUpdate indicates an expected call of SubscribeOnTokensUpdate.
func (mr *MockCoingeckoTokensServiceMockRecorder) SubscribeOnTokensUpdate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscribeOnTokensUpdate", reflect.TypeOf((*MockCoingeckoTokensService)(nil).SubscribeOnTokensUpdate))
}
