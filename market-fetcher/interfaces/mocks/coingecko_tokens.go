// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/status-im/market-proxy/interfaces (interfaces: ITokensService)
//
// Generated by this command:
//
//	mockgen -destination=mocks/coingecko_tokens.go . ITokensService
//

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	reflect "reflect"

	events "github.com/status-im/market-proxy/events"
	interfaces "github.com/status-im/market-proxy/interfaces"
	gomock "go.uber.org/mock/gomock"
)

// MockITokensService is a mock of ITokensService interface.
type MockITokensService struct {
	ctrl     *gomock.Controller
	recorder *MockITokensServiceMockRecorder
}

// MockITokensServiceMockRecorder is the mock recorder for MockITokensService.
type MockITokensServiceMockRecorder struct {
	mock *MockITokensService
}

// NewMockITokensService creates a new mock instance.
func NewMockITokensService(ctrl *gomock.Controller) *MockITokensService {
	mock := &MockITokensService{ctrl: ctrl}
	mock.recorder = &MockITokensServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITokensService) EXPECT() *MockITokensServiceMockRecorder {
	return m.recorder
}

// GetTokenIds mocks base method.
func (m *MockITokensService) GetTokenIds() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenIds")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetTokenIds indicates an expected call of GetTokenIds.
func (mr *MockITokensServiceMockRecorder) GetTokenIds() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenIds", reflect.TypeOf((*MockITokensService)(nil).GetTokenIds))
}

// GetTokens mocks base method.
func (m *MockITokensService) GetTokens() []interfaces.Token {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokens")
	ret0, _ := ret[0].([]interfaces.Token)
	return ret0
}

// GetTokens indicates an expected call of GetTokens.
func (mr *MockITokensServiceMockRecorder) GetTokens() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokens", reflect.TypeOf((*MockITokensService)(nil).GetTokens))
}

// SubscribeOnTokensUpdate mocks base method.
func (m *MockITokensService) SubscribeOnTokensUpdate() events.ISubscription {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubscribeOnTokensUpdate")
	ret0, _ := ret[0].(events.ISubscription)
	return ret0
}

// SubscribeOnTokensUpdate indicates an expected call of SubscribeOnTokensUpdate.
func (mr *MockITokensServiceMockRecorder) SubscribeOnTokensUpdate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscribeOnTokensUpdate", reflect.TypeOf((*MockITokensService)(nil).SubscribeOnTokensUpdate))
}
