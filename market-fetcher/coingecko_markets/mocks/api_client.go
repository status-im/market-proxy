// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/status-im/market-proxy/coingecko_markets (interfaces: APIClient)
//
// Generated by this command:
//
//	mockgen -destination=mocks/api_client.go . APIClient
//

// Package mock_coingecko_markets is a generated GoMock package.
package mock_coingecko_markets

import (
	reflect "reflect"

	interfaces "github.com/status-im/market-proxy/interfaces"
	gomock "go.uber.org/mock/gomock"
)

// MockAPIClient is a mock of APIClient interface.
type MockAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockAPIClientMockRecorder
}

// MockAPIClientMockRecorder is the mock recorder for MockAPIClient.
type MockAPIClientMockRecorder struct {
	mock *MockAPIClient
}

// NewMockAPIClient creates a new mock instance.
func NewMockAPIClient(ctrl *gomock.Controller) *MockAPIClient {
	mock := &MockAPIClient{ctrl: ctrl}
	mock.recorder = &MockAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIClient) EXPECT() *MockAPIClientMockRecorder {
	return m.recorder
}

// FetchPage mocks base method.
func (m *MockAPIClient) FetchPage(arg0 interfaces.MarketsParams) ([][]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchPage", arg0)
	ret0, _ := ret[0].([][]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchPage indicates an expected call of FetchPage.
func (mr *MockAPIClientMockRecorder) FetchPage(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchPage", reflect.TypeOf((*MockAPIClient)(nil).FetchPage), arg0)
}

// Healthy mocks base method.
func (m *MockAPIClient) Healthy() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Healthy")
	ret0, _ := ret[0].(bool)
	return ret0
}

// Healthy indicates an expected call of Healthy.
func (mr *MockAPIClientMockRecorder) Healthy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Healthy", reflect.TypeOf((*MockAPIClient)(nil).Healthy))
}
