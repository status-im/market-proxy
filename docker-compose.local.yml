services:
  market-fetcher:
    build:
      context: ./market-fetcher
      dockerfile: Dockerfile
    container_name: 'market-fetcher'
    volumes:
      - ./market-fetcher/config.yaml:/app/config.yaml
      - ./secrets/coingecko_api_tokens.json:/app/coingecko_api_tokens.json
    environment:
      GO_ENV: 'development'
      PORT: '8081'
    restart: unless-stopped
    ports:
      - "8081:8081"
    networks:
      - 'markets-network'
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:8081/health" ]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  market-proxy:
    build:
      context: ./nginx-proxy
      dockerfile: Dockerfile.local
    container_name: 'market-proxy'
    volumes:
      - ./secrets/.htpasswd:/etc/nginx/.htpasswd:ro
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - 'markets-network'
    healthcheck:
      test: ['CMD-SHELL', 'nc -z 0.0.0.0 8080']
      interval: '30s'
      timeout: '30s'
      retries: 3
      start_period: '10s'
    depends_on:
      market-fetcher:
        condition: service_healthy

  market-frontend:
    build:
      context: ./test-api
      dockerfile: Dockerfile
    container_name: 'market-frontend'
    volumes:
      - ./test-api:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_PROXY_USER=${MARKET_PROXY_USER}
      - REACT_APP_PROXY_PASSWORD=${MARKET_PROXY_PASSWORD}
    ports:
      - "3000:3000"
    depends_on:
      - market-proxy
    restart: unless-stopped

  prometheus:
    image: 'prom/prometheus:latest'
    container_name: 'prometheus'
    restart: 'always'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - 'markets-network'
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
    depends_on:
      market-fetcher:
        condition: service_healthy

  grafana:
    image: 'grafana/grafana:latest'
    container_name: 'grafana'
    restart: 'always'
    ports:
      - '3001:3000'
    networks:
      - 'markets-network'
    volumes:
      - './grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards'
      - './grafana/dashboards:/var/lib/grafana/dashboards'
      - './grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=5s
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    depends_on:
      - prometheus

networks:
  markets-network:
    driver: bridge